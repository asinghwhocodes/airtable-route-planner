"use strict";

require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Base", {
  enumerable: true,
  get: function get() {
    return _base.default;
  }
});
Object.defineProperty(exports, "Cursor", {
  enumerable: true,
  get: function get() {
    return _cursor.default;
  }
});
Object.defineProperty(exports, "Field", {
  enumerable: true,
  get: function get() {
    return _field2.default;
  }
});
Object.defineProperty(exports, "FieldConfig", {
  enumerable: true,
  get: function get() {
    return _field.FieldConfig;
  }
});
Object.defineProperty(exports, "FieldType", {
  enumerable: true,
  get: function get() {
    return _field.FieldType;
  }
});
Object.defineProperty(exports, "GroupedRecordQueryResult", {
  enumerable: true,
  get: function get() {
    return _grouped_record_query_result.default;
  }
});
Object.defineProperty(exports, "LinkedRecordsQueryResult", {
  enumerable: true,
  get: function get() {
    return _linked_records_query_result.default;
  }
});
Object.defineProperty(exports, "Record", {
  enumerable: true,
  get: function get() {
    return _record.default;
  }
});
Object.defineProperty(exports, "RecordQueryResult", {
  enumerable: true,
  get: function get() {
    return _record_query_result.default;
  }
});
Object.defineProperty(exports, "Session", {
  enumerable: true,
  get: function get() {
    return _session.default;
  }
});
Object.defineProperty(exports, "Table", {
  enumerable: true,
  get: function get() {
    return _table.default;
  }
});
Object.defineProperty(exports, "TableOrViewQueryResult", {
  enumerable: true,
  get: function get() {
    return _table_or_view_query_result.default;
  }
});
Object.defineProperty(exports, "View", {
  enumerable: true,
  get: function get() {
    return _view2.default;
  }
});
Object.defineProperty(exports, "ViewMetadataQueryResult", {
  enumerable: true,
  get: function get() {
    return _view_metadata_query_result.default;
  }
});
Object.defineProperty(exports, "ViewType", {
  enumerable: true,
  get: function get() {
    return _view.ViewType;
  }
});
exports.recordColoring = void 0;
var recordColoring = _interopRequireWildcard(require("./record_coloring"));
exports.recordColoring = recordColoring;
var _create_aggregators = _interopRequireDefault(require("./create_aggregators"));
var _field = require("../types/field");
var _view = require("../types/view");
var _base = _interopRequireDefault(require("./base"));
var _table = _interopRequireDefault(require("./table"));
var _field2 = _interopRequireDefault(require("./field"));
var _view2 = _interopRequireDefault(require("./view"));
var _record = _interopRequireDefault(require("./record"));
var _record_query_result = _interopRequireDefault(require("./record_query_result"));
var _table_or_view_query_result = _interopRequireDefault(require("./table_or_view_query_result"));
var _grouped_record_query_result = _interopRequireDefault(require("./grouped_record_query_result"));
var _linked_records_query_result = _interopRequireDefault(require("./linked_records_query_result"));
var _view_metadata_query_result = _interopRequireDefault(require("./view_metadata_query_result"));
var _session = _interopRequireDefault(require("./session"));
var _cursor = _interopRequireDefault(require("./cursor"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// istanbul ignore file
/** @ignore */ /** */

// HACK: aggregators need airtable_interface to initialize - really, they should be a property of
// base instead of here. to work around that, they're initialized lazily for now:
// eslint-disable-next-line no-var

var initializedAggregators = null;
Object.defineProperty(exports, 'aggregators', {
  enumerable: true,
  get: () => {
    if (!initializedAggregators) {
      initializedAggregators = (0, _create_aggregators.default)();
    }
    return initializedAggregators;
  }
});