"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.symbol.description.js");
require("core-js/modules/es.array.from.js");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.array.slice.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.regexp.exec.js");
require("core-js/modules/es.regexp.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sharedFieldPickerPropTypes = exports.default = void 0;
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.array.sort.js");
require("core-js/modules/es.object.to-string.js");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var React = _interopRequireWildcard(require("react"));
var _private_utils = require("../private_utils");
var _field = _interopRequireDefault(require("../models/field"));
var _table = _interopRequireDefault(require("../models/table"));
var _field2 = require("../types/field");
var _select = require("./select");
var _model_picker_select = _interopRequireDefault(require("./model_picker_select"));
var _use_watchable = _interopRequireDefault(require("./use_watchable"));
var _sdk_context = require("./sdk_context");
var _excluded = ["table", "field", "shouldAllowPickingNone", "allowedTypes", "placeholder", "onChange"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /** @module @airtable/blocks/ui: FieldPicker */ /** */
/**
 * Props shared between the {@link FieldPicker} and {@link FieldPickerSynced} components.
 */

// Shared with `FieldPicker` and `FieldPickerSynced`.
var sharedFieldPickerPropTypes = exports.sharedFieldPickerPropTypes = _objectSpread({
  table: _propTypes.default.instanceOf(_table.default),
  allowedTypes: _propTypes.default.arrayOf(_propTypes.default.oneOf((0, _private_utils.values)(_field2.FieldType)).isRequired),
  shouldAllowPickingNone: _propTypes.default.bool,
  placeholder: _propTypes.default.string,
  onChange: _propTypes.default.func
}, _select.sharedSelectBasePropTypes);

/**
 * Props for the {@link FieldPicker} component. Also accepts:
 * * {@link SelectStyleProps}
 *
 * @docsPath UI/components/FieldPicker
 */

/**
 * Dropdown menu component for selecting fields.
 *
 * [[ Story id="modelpickers--fieldpicker-example" title="Field picker example" ]]
 *
 * @docsPath UI/components/FieldPicker
 * @component
 */
var FieldPicker = (props, ref) => {
  var table = props.table,
    selectedField = props.field,
    shouldAllowPickingNone = props.shouldAllowPickingNone,
    allowedTypes = props.allowedTypes,
    placeholder = props.placeholder,
    onChange = props.onChange,
    restOfProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var sdk = (0, _sdk_context.useSdk)();
  (0, _use_watchable.default)(sdk.base, ['tables']);
  (0, _use_watchable.default)(table, ['fields']);
  if (!table || table.isDeleted) {
    return null;
  }
  function _onChange(fieldId) {
    if (onChange) {
      var field = table && !table.isDeleted && fieldId ? table.getFieldByIdIfExists(fieldId) : null;
      onChange(field);
    }
  }
  var placeholderToUse;
  if (placeholder === undefined) {
    // Let's set a good default value for the placeholder, depending
    // on the shouldAllowPickingNone flag.
    placeholderToUse = shouldAllowPickingNone ? 'None' : 'Pick a field...';
  } else {
    placeholderToUse = placeholder;
  }
  var allowedTypesSet = {};
  if (allowedTypes) {
    var _iterator = _createForOfIteratorHelper(allowedTypes),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var allowedType = _step.value;
        allowedTypesSet[allowedType] = true;
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  }
  var shouldAllowPickingFieldFn = field => {
    return !allowedTypes || (0, _private_utils.has)(allowedTypesSet, field.type);
  };

  // Fields are only ordered within a view, and views' column orders aren't
  // loaded by default. So we'll always list the primary field first, followed
  // by the rest of the fields in alphabetical order.
  var models = table.fields.filter(field => field !== table.primaryField).sort((a, b) => {
    return a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1;
  });
  models.unshift(table.primaryField);
  return /*#__PURE__*/React.createElement(_model_picker_select.default, (0, _extends2.default)({}, restOfProps, {
    ref: ref,
    models: models
    // `shouldAllowPickingModelFn` is typed as `AnyModel`. Cast to any since we only expect `Field`.
    ,
    shouldAllowPickingModelFn: shouldAllowPickingFieldFn,
    selectedModelId: selectedField && !selectedField.isDeleted ? selectedField.id : null,
    modelKeysToWatch: ['name', 'type', 'options'],
    shouldAllowPickingNone: shouldAllowPickingNone,
    placeholder: placeholderToUse,
    onChange: _onChange
  }));
};
var ForwardedRefFieldPicker = /*#__PURE__*/React.forwardRef(FieldPicker);
ForwardedRefFieldPicker.displayName = 'FieldPicker';
ForwardedRefFieldPicker.propTypes = _objectSpread({
  field: _propTypes.default.instanceOf(_field.default)
}, sharedFieldPickerPropTypes);
var _default = exports.default = ForwardedRefFieldPicker;