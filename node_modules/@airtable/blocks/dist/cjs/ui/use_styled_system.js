"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useStyledSystem;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _emotion = require("emotion");
var _use_theme = _interopRequireDefault(require("./theme/use_theme"));
var _index = require("./system/index");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/** @internal */
function useStyledSystem(styleProps) {
  var styleParser = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _index.allStylesParser;
  var theme = (0, _use_theme.default)();

  // Add the theme to the style props because that's how the parser expects it.
  var styles = styleParser(_objectSpread(_objectSpread({}, styleProps), {}, {
    theme
  }));

  // At this point `styles` is still an object, we need to turn it into a class name.
  var classNameForStyleProps = (0, _emotion.css)(styles);
  return classNameForStyleProps;
}