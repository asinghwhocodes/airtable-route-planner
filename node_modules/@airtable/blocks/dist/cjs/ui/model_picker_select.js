"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.array.map.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _error_utils = require("../error_utils");
var _table = _interopRequireDefault(require("../models/table"));
var _view = _interopRequireDefault(require("../models/view"));
var _field = _interopRequireDefault(require("../models/field"));
var _select = _interopRequireWildcard(require("./select"));
var _use_watchable = _interopRequireDefault(require("./use_watchable"));
var _excluded = ["models", "modelKeysToWatch", "selectedModelId", "shouldAllowPickingNone", "shouldAllowPickingModelFn", "placeholder", "onChange"];
/** @hidden */
/** */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
// Private component used by TablePicker, ViewPicker, FieldPicker.

function ModelPickerSelect(props, ref) {
  var models = props.models,
    modelKeysToWatch = props.modelKeysToWatch,
    selectedModelId = props.selectedModelId,
    shouldAllowPickingNone = props.shouldAllowPickingNone,
    shouldAllowPickingModelFn = props.shouldAllowPickingModelFn,
    placeholder = props.placeholder,
    onChange = props.onChange,
    restOfProps = (0, _objectWithoutProperties2.default)(props, _excluded);

  // useWatchable has stricter typing than createDataContainer which it replaced, so we can't
  // know that model and modelKeysToWatch are exactly compatible here:
  (0, _use_watchable.default)(models, modelKeysToWatch);
  function _onChange(value) {
    (0, _error_utils.invariant)(value === null || typeof value === 'string', 'value must be null or model id');
    onChange(value);
  }
  var options = [{
    value: null,
    label: placeholder,
    disabled: !shouldAllowPickingNone
  }, ...models.map(model => {
    return {
      value: model.id,
      label: model.name,
      disabled: shouldAllowPickingModelFn && !shouldAllowPickingModelFn(model)
    };
  })];
  return /*#__PURE__*/React.createElement(_select.default, (0, _extends2.default)({}, restOfProps, {
    ref: ref,
    value: selectedModelId,
    onChange: _onChange,
    options: options
  }));
}
var ForwardedRefModelPickerSelect = /*#__PURE__*/React.forwardRef(ModelPickerSelect);
ForwardedRefModelPickerSelect.displayName = 'ModelPickerSelect';
ForwardedRefModelPickerSelect.propTypes = _objectSpread({
  models: _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.instanceOf(_table.default).isRequired, _propTypes.default.instanceOf(_view.default).isRequired, _propTypes.default.instanceOf(_field.default).isRequired]).isRequired).isRequired,
  selectedModelId: _propTypes.default.string,
  modelKeysToWatch: _propTypes.default.arrayOf(_propTypes.default.string.isRequired).isRequired,
  shouldAllowPickingNone: _propTypes.default.bool,
  shouldAllowPickingModelFn: _propTypes.default.func,
  onChange: _propTypes.default.func.isRequired,
  placeholder: _propTypes.default.string.isRequired
}, _select.sharedSelectBasePropTypes);
var _default = exports.default = ForwardedRefModelPickerSelect;