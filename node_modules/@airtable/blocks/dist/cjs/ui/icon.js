"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sharedIconPropTypes = exports.iconStylePropTypes = exports.default = void 0;
require("core-js/modules/es.array.concat.js");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _core = require("@styled-system/core");
var _emotion = require("emotion");
var _warning = _interopRequireDefault(require("../warning"));
var _use_styled_system = _interopRequireDefault(require("./use_styled_system"));
var _system = require("./system");
var _tooltip_anchor_props = require("./types/tooltip_anchor_props");
var _icon_config = require("./icon_config");
var _excluded = ["name", "size", "fillColor", "onMouseEnter", "onMouseLeave", "onClick", "hasOnClick", "className", "style", "pathClassName", "pathStyle", "suppressWarning"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /** @module @airtable/blocks/ui: Icon */ /** */
/**
 * Style props shared between the {@link Icon} and {@link FieldIcon} components. Accepts:
 * * {@link FlexItemSetProps}
 * * {@link PositionSetProps}
 * * {@link MarginProps}
 *
 * @noInheritDoc
 */

var styleParser = (0, _core.compose)(_system.flexItemSet, _system.positionSet, _system.margin, _system.width, _system.height);
var iconStylePropTypes = exports.iconStylePropTypes = _objectSpread(_objectSpread(_objectSpread({}, _system.flexItemSetPropTypes), _system.positionSetPropTypes), _system.marginPropTypes);

/**
 * Props shared between the {@link Icon} and {@link FieldIcon} components.
 *
 * @noInheritDoc
 */
// TODO (stephen): inherit shared props without inheriting style props

var sharedIconPropTypes = exports.sharedIconPropTypes = _objectSpread(_objectSpread({
  size: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),
  fillColor: _propTypes.default.string,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  pathClassName: _propTypes.default.string,
  pathStyle: _propTypes.default.object
}, _tooltip_anchor_props.tooltipAnchorPropTypes), iconStylePropTypes);

/**
 * Props for the {@link Icon} component. Also accepts:
 * * {@link IconStyleProps}
 */

/**
 * A vector icon from the Airtable icon set.
 *
 * [[ Story id="icon--example" title="Icon example" height="576px"]]
 *
 * @component
 * @docsPath UI/components/Icon
 */
var Icon = (props, ref) => {
  var name = props.name,
    _props$size = props.size,
    size = _props$size === void 0 ? 16 : _props$size,
    _props$fillColor = props.fillColor,
    fillColor = _props$fillColor === void 0 ? 'currentColor' : _props$fillColor,
    onMouseEnter = props.onMouseEnter,
    onMouseLeave = props.onMouseLeave,
    onClick = props.onClick,
    hasOnClick = props.hasOnClick,
    className = props.className,
    style = props.style,
    pathClassName = props.pathClassName,
    pathStyle = props.pathStyle,
    _props$suppressWarnin = props.suppressWarning,
    suppressWarning = _props$suppressWarnin === void 0 ? false : _props$suppressWarnin,
    styleProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var classNameForStyleProps = (0, _use_styled_system.default)(_objectSpread(_objectSpread({}, styleProps), {}, {
    width: size,
    height: size
  }), styleParser);
  var phosphorIconName = _icon_config.legacyIconNameToPhosphorIconName[name];
  var pathData = phosphorIconName ? _icon_config.phosphorIconConfig[phosphorIconName] : null;
  if (!pathData) {
    return null;
  }
  if (_icon_config.deprecatedIconNameToReplacementName.has(name) && !suppressWarning) {
    var alternative = _icon_config.deprecatedIconNameToReplacementName.get(name);
    var alternativeText = '';
    if (alternative) {
      alternativeText = "Use <Icon name='".concat(alternative, "' .../> instead.");
    }
    (0, _warning.default)("'".concat(name, "' as an icon name is deprecated. ").concat(alternativeText));
  }
  return /*#__PURE__*/_react.default.createElement("svg", {
    ref: ref,
    viewBox: "0 0 16 16"
    // TODO (stephen): remove tooltip anchor props
    ,
    onMouseEnter: onMouseEnter,
    onMouseLeave: onMouseLeave,
    onClick: onClick,
    className: (0, _emotion.cx)(classNameForStyleProps, className),
    style: _objectSpread({
      shapeRendering: 'geometricPrecision'
    }, style)
  }, /*#__PURE__*/_react.default.createElement("path", {
    fillRule: "evenodd",
    className: pathClassName,
    style: pathStyle,
    fill: fillColor,
    d: pathData
  }));
};
var ForwardedRefIcon = /*#__PURE__*/_react.default.forwardRef(Icon);
ForwardedRefIcon.propTypes = _objectSpread({
  name: _icon_config.iconNamePropType.isRequired,
  suppressWarning: _propTypes.default.bool
}, sharedIconPropTypes);
ForwardedRefIcon.displayName = 'Icon';
var _default = exports.default = ForwardedRefIcon;