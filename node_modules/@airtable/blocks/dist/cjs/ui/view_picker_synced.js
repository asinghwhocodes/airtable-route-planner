"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var React = _interopRequireWildcard(require("react"));
var _view_picker = _interopRequireWildcard(require("./view_picker"));
var _global_config_synced_component_helpers = _interopRequireDefault(require("./global_config_synced_component_helpers"));
var _use_synced = _interopRequireDefault(require("./use_synced"));
var _use_watchable = _interopRequireDefault(require("./use_watchable"));
var _sdk_context = require("./sdk_context");
var _excluded = ["globalConfigKey", "table", "onChange", "disabled"];
/** @module @airtable/blocks/ui: ViewPicker */
/** */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * Props for the {@link ViewPickerSynced} component. Also accepts:
 * * {@link SelectStyleProps}
 *
 * @docsPath UI/components/ViewPickerSynced
 * @groupPath UI/components/ViewPicker
 */

/**
 * A wrapper around the {@link ViewPicker} component that syncs with {@link GlobalConfig}.
 *
 * [[ Story id="modelpickers--viewpickersynced-example" title="Synced view picker example" ]]
 *
 * @docsPath UI/components/ViewPickerSynced
 * @groupPath UI/components/ViewPicker
 * @component
 */
var ViewPickerSynced = (props, ref) => {
  var globalConfigKey = props.globalConfigKey,
    table = props.table,
    _onChange = props.onChange,
    disabled = props.disabled,
    restOfProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var _useSynced = (0, _use_synced.default)(globalConfigKey),
    _useSynced2 = (0, _slicedToArray2.default)(_useSynced, 3),
    viewId = _useSynced2[0],
    setViewId = _useSynced2[1],
    canSetViewId = _useSynced2[2];
  var sdk = (0, _sdk_context.useSdk)();
  (0, _use_watchable.default)(sdk.base, ['tables']);
  (0, _use_watchable.default)(table, ['views']);
  function _getViewFromGlobalConfigValue() {
    if (!table || table.isDeleted) {
      return null;
    }
    return typeof viewId === 'string' && table ? table.getViewByIdIfExists(viewId) : null;
  }
  return /*#__PURE__*/React.createElement(_view_picker.default, (0, _extends2.default)({}, restOfProps, {
    ref: ref,
    table: table,
    view: _getViewFromGlobalConfigValue(),
    onChange: view => {
      setViewId(view ? view.id : null);
      if (_onChange) {
        _onChange(view);
      }
    },
    disabled: disabled || !canSetViewId
  }));
};
var ForwardedRefViewPickerSynced = /*#__PURE__*/React.forwardRef(ViewPickerSynced);
ForwardedRefViewPickerSynced.displayName = 'ViewPickerSynced';
ForwardedRefViewPickerSynced.propTypes = _objectSpread({
  globalConfigKey: _global_config_synced_component_helpers.default.globalConfigKeyPropType
}, _view_picker.sharedViewPickerPropTypes);
var _default = exports.default = ForwardedRefViewPickerSynced;