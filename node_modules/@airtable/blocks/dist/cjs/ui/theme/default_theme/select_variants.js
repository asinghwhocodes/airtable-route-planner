"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _emotion = require("emotion");
var _tokens = require("./tokens");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var styleForChevron = {
  // https://codepen.io/tigt/post/optimizing-svgs-in-data-uris
  // You can use https://www.npmjs.com/package/mini-svg-data-uri to generate the `background-image` from a svg.
  backgroundImage: "url(\"data:image/svg+xml,%3csvg width='7' height='6' viewBox='0 0 7 6' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M.601.8h4.8a.6.6 0 01.48.96l-2.4 3.2a.6.6 0 01-.96 0l-2.4-3.2A.6.6 0 01.601.8z' fill='rgba(0%2c 0%2c 0%2c 0.5)'/%3e%3c/svg%3e\")",
  backgroundRepeat: 'no-repeat'
};
var baseStyles = (0, _emotion.css)(_objectSpread(_objectSpread({
  fontFamily: _tokens.fontFamilies.default,
  borderRadius: _tokens.radii.default,
  justifyContent: 'center',
  alignItems: 'center',
  paddingTop: 0,
  paddingBottom: 0,
  fontWeight: 400,
  outline: 'none',
  appearance: 'none',
  border: 'none'
}, styleForChevron), {}, {
  '&:not(:disabled)': {
    cursor: 'pointer',
    '&:hover': {
      opacity: _tokens.opacities.quiet
    },
    '&:active': {
      opacity: 1
    },
    '&:focus': {
      boxShadow: "inset 0 0 0 2px ".concat(_tokens.colors.darken3)
    }
  },
  '&:disabled': {
    cursor: 'default',
    opacity: _tokens.opacities.quieter
  }
}));
var selectVariants = {
  default: (0, _emotion.cx)(baseStyles, (0, _emotion.css)({
    color: _tokens.colors.dark,
    backgroundColor: _tokens.colors.lightGray2
  }))
};
var _default = exports.default = selectVariants;