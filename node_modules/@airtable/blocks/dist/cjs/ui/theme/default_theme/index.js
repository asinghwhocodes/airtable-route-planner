"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var tokens = _interopRequireWildcard(require("./tokens"));
var controlSizes = _interopRequireWildcard(require("./control_sizes"));
var _text_styles = _interopRequireDefault(require("./text_styles"));
var _heading_styles = _interopRequireDefault(require("./heading_styles"));
var _button_variants = _interopRequireDefault(require("./button_variants"));
var _link_variants = _interopRequireDefault(require("./link_variants"));
var _input_variants = _interopRequireDefault(require("./input_variants"));
var _switch_variants = _interopRequireDefault(require("./switch_variants"));
var _select_variants = _interopRequireDefault(require("./select_variants"));
var _select_buttons_variants = _interopRequireDefault(require("./select_buttons_variants"));
var _text_button_variants = _interopRequireDefault(require("./text_button_variants"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } // Typography sizes and variants
// Component variants
var theme = _objectSpread(_objectSpread(_objectSpread({}, tokens), controlSizes), {}, {
  textStyles: _text_styles.default,
  headingStyles: _heading_styles.default,
  // We create CSS class names for variants when the UI kit gets loaded.
  // This means `textButtonVariants.default` is just a CSS class name.
  // This has the benefit over exporting a style object
  // of not having to create a class name manually in the render function.
  buttonVariants: _button_variants.default,
  linkVariants: _link_variants.default,
  inputVariants: _input_variants.default,
  selectVariants: _select_variants.default,
  selectButtonsVariants: _select_buttons_variants.default,
  switchVariants: _switch_variants.default,
  textButtonVariants: _text_button_variants.default
});
var _default = exports.default = theme;