"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.switchSizes = exports.selectSizes = exports.selectButtonsSizes = exports.inputSizes = exports.buttonSizes = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var sharedControlSizes = {
  small: {
    fontSize: 2,
    // 13px
    height: '28px',
    lineHeight: '19px'
  },
  default: {
    fontSize: 2,
    // 13px
    height: '32px',
    lineHeight: '21px'
  },
  large: {
    fontSize: 3,
    // 15px
    height: '36px',
    lineHeight: '21px'
  }
};
var buttonSizes = exports.buttonSizes = {
  small: _objectSpread(_objectSpread({}, sharedControlSizes.small), {}, {
    paddingX: '10px'
  }),
  default: _objectSpread(_objectSpread({}, sharedControlSizes.default), {}, {
    paddingX: '12px'
  }),
  large: _objectSpread(_objectSpread({}, sharedControlSizes.large), {}, {
    paddingX: '14px'
  })
};
var selectSizes = exports.selectSizes = {
  small: _objectSpread(_objectSpread({}, sharedControlSizes.small), {}, {
    paddingLeft: '8px',
    paddingRight: '24px',
    backgroundPosition: 'calc(100% - 8px)'
  }),
  default: _objectSpread(_objectSpread({}, sharedControlSizes.default), {}, {
    paddingLeft: '10px',
    paddingRight: '26px',
    backgroundPosition: 'calc(100% - 10px)'
  }),
  large: _objectSpread(_objectSpread({}, sharedControlSizes.large), {}, {
    paddingLeft: '12px',
    paddingRight: '28px',
    backgroundPosition: 'calc(100% - 12px)'
  })
};
var inputSizes = exports.inputSizes = {
  small: _objectSpread(_objectSpread({}, sharedControlSizes.small), {}, {
    paddingX: '8px'
  }),
  default: _objectSpread(_objectSpread({}, sharedControlSizes.default), {}, {
    paddingX: '10px'
  }),
  large: _objectSpread(_objectSpread({}, sharedControlSizes.large), {}, {
    paddingX: '12px'
  })
};
var selectButtonsSizes = exports.selectButtonsSizes = {
  small: _objectSpread(_objectSpread({}, sharedControlSizes.small), {}, {
    padding: 1
  }),
  default: _objectSpread(_objectSpread({}, sharedControlSizes.default), {}, {
    padding: 1
  }),
  large: _objectSpread(_objectSpread({}, sharedControlSizes.large), {}, {
    padding: 1
  })
};
var switchSizes = exports.switchSizes = {
  small: _objectSpread(_objectSpread({}, sharedControlSizes.small), {}, {
    paddingX: '8px'
  }),
  default: _objectSpread(_objectSpread({}, sharedControlSizes.default), {}, {
    paddingX: '10px'
  }),
  large: _objectSpread(_objectSpread({}, sharedControlSizes.large), {}, {
    paddingX: '12px'
  })
};