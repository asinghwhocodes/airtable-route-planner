"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var React = _interopRequireWildcard(require("react"));
var _dialog = _interopRequireWildcard(require("./dialog"));
var _heading = _interopRequireDefault(require("./heading"));
var _text = _interopRequireDefault(require("./text"));
var _button = _interopRequireDefault(require("./button"));
var _box = _interopRequireDefault(require("./box"));
var _excluded = ["title", "body", "cancelButtonText", "confirmButtonText", "isConfirmActionDangerous", "className", "style", "backgroundClassName", "backgroundStyle", "onCancel", "onConfirm", "isCancelButtonDisabled", "isConfirmButtonDisabled"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /** @module @airtable/blocks/ui: Dialog */ /** */
/**
 * Props for the {@link ConfirmationDialog} component. Also accepts:
 * * {@link DialogStyleProps}
 *
 * @noInheritDoc
 * @docsPath UI/components/ConfirmationDialog
 */
/**
 * A styled modal dialog component that prompts the user to confirm or cancel an action.
 *
 * [[ Story id="confirmationdialog--example" title="Confirmation dialog example" ]]
 *
 * By default, this component will focus the "Confirm" button on mount, so that pressing
 * the Enter key will confirm the action.
 *
 * @component
 * @docsPath UI/components/ConfirmationDialog
 */
var ConfirmationDialog = /*#__PURE__*/function (_React$Component) {
  function ConfirmationDialog() {
    var _this;
    (0, _classCallCheck2.default)(this, ConfirmationDialog);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, ConfirmationDialog, [...args]);
    /** @internal */
    (0, _defineProperty2.default)(_this, "_confirmButtonRef", /*#__PURE__*/React.createRef());
    return _this;
  }
  (0, _inherits2.default)(ConfirmationDialog, _React$Component);
  return (0, _createClass2.default)(ConfirmationDialog, [{
    key: "componentDidMount",
    value: /** @hidden */
    function componentDidMount() {
      if (this._confirmButtonRef.current !== null) {
        this._confirmButtonRef.current.focus();
      }
    }
    /** @hidden */
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
        title = _this$props.title,
        body = _this$props.body,
        cancelButtonText = _this$props.cancelButtonText,
        confirmButtonText = _this$props.confirmButtonText,
        isConfirmActionDangerous = _this$props.isConfirmActionDangerous,
        className = _this$props.className,
        style = _this$props.style,
        backgroundClassName = _this$props.backgroundClassName,
        backgroundStyle = _this$props.backgroundStyle,
        onCancel = _this$props.onCancel,
        onConfirm = _this$props.onConfirm,
        isCancelButtonDisabled = _this$props.isCancelButtonDisabled,
        isConfirmButtonDisabled = _this$props.isConfirmButtonDisabled,
        restOfProps = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
      return /*#__PURE__*/React.createElement(_dialog.default, (0, _extends2.default)({
        onClose: onCancel,
        className: className,
        style: style,
        backgroundClassName: backgroundClassName,
        backgroundStyle: backgroundStyle
      }, restOfProps), /*#__PURE__*/React.createElement(_dialog.default.CloseButton, null), /*#__PURE__*/React.createElement(_heading.default, {
        size: "small"
      }, title), typeof body === 'string' ? /*#__PURE__*/React.createElement(_text.default, {
        variant: "paragraph"
      }, body) : body, /*#__PURE__*/React.createElement(_box.default, {
        display: "flex",
        flexDirection: "row-reverse",
        alignItems: "center",
        justifyContent: "start",
        width: "100%",
        marginTop: 3
      }, /*#__PURE__*/React.createElement(_button.default, {
        ref: this._confirmButtonRef,
        onClick: onConfirm,
        variant: isConfirmActionDangerous ? 'danger' : 'primary',
        disabled: isConfirmButtonDisabled
      }, confirmButtonText), /*#__PURE__*/React.createElement(_button.default, {
        onClick: onCancel,
        variant: "secondary",
        alignSelf: "end",
        marginRight: 2,
        disabled: isCancelButtonDisabled
      }, cancelButtonText)));
    }
  }]);
}(React.Component);
/** @hidden */
(0, _defineProperty2.default)(ConfirmationDialog, "propTypes", _objectSpread({
  title: _propTypes.default.string.isRequired,
  body: _propTypes.default.node,
  cancelButtonText: _propTypes.default.string,
  confirmButtonText: _propTypes.default.string,
  isConfirmActionDangerous: _propTypes.default.bool,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  backgroundClassName: _propTypes.default.string,
  backgroundStyle: _propTypes.default.object,
  onCancel: _propTypes.default.func.isRequired,
  onConfirm: _propTypes.default.func.isRequired,
  isCancelButtonDisabled: _propTypes.default.bool,
  isConfirmButtonDisabled: _propTypes.default.bool
}, _dialog.dialogStylePropTypes));
/** @hidden */
(0, _defineProperty2.default)(ConfirmationDialog, "defaultProps", {
  cancelButtonText: 'Cancel',
  confirmButtonText: 'Confirm',
  isConfirmActionDangerous: false,
  isCancelButtonDisabled: false,
  isConfirmButtonDisabled: false,
  width: '400px'
});
var _default = exports.default = ConfirmationDialog;