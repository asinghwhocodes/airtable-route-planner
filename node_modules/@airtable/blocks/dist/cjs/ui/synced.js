"use strict";

require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Synced = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var React = _interopRequireWildcard(require("react"));
var _global_config_synced_component_helpers = _interopRequireDefault(require("./global_config_synced_component_helpers"));
var _with_hooks = _interopRequireDefault(require("./with_hooks"));
var _sdk_context = require("./sdk_context");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /** @hidden */ /** */
/** @hidden */
/** @hidden */
var Synced = exports.Synced = /*#__PURE__*/function (_React$Component) {
  /** @hidden */
  function Synced(props) {
    var _this;
    (0, _classCallCheck2.default)(this, Synced);
    _this = _callSuper(this, Synced, [props]);
    _this._setValue = _this._setValue.bind(_this);
    return _this;
  }
  /** @internal */
  (0, _inherits2.default)(Synced, _React$Component);
  return (0, _createClass2.default)(Synced, [{
    key: "_setValue",
    value: function _setValue(newValue) {
      this.props.sdk.globalConfig.setAsync(this.props.globalConfigKey, newValue);
    }
    /** @hidden */
  }, {
    key: "render",
    value: function render() {
      var globalConfig = this.props.sdk.globalConfig;
      var value = globalConfig.get(this.props.globalConfigKey);
      var canSetValue = globalConfig.hasPermissionToSet(this.props.globalConfigKey);
      return this.props.render({
        value,
        canSetValue,
        setValue: this._setValue
      });
    }
  }]);
}(React.Component);
/** @hidden */
(0, _defineProperty2.default)(Synced, "propTypes", {
  globalConfigKey: _global_config_synced_component_helpers.default.globalConfigKeyPropType,
  render: _propTypes.default.func.isRequired
});
var _default = exports.default = (0, _with_hooks.default)(Synced, props => {
  _global_config_synced_component_helpers.default.useDefaultWatchesForSyncedComponent(props.globalConfigKey);
  return {
    sdk: (0, _sdk_context.useSdk)()
  };
});