"use strict";

require("core-js/modules/es.symbol.js");
require("core-js/modules/es.array.filter.js");
require("core-js/modules/es.array.iterator.js");
require("core-js/modules/es.object.get-own-property-descriptors.js");
require("core-js/modules/es.object.to-string.js");
require("core-js/modules/es.weak-map.js");
require("core-js/modules/web.dom-collections.for-each.js");
require("core-js/modules/web.dom-collections.iterator.js");
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sharedTablePickerPropTypes = exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var React = _interopRequireWildcard(require("react"));
var _table = _interopRequireDefault(require("../models/table"));
var _select = require("./select");
var _model_picker_select = _interopRequireDefault(require("./model_picker_select"));
var _use_watchable = _interopRequireDefault(require("./use_watchable"));
var _sdk_context = require("./sdk_context");
var _excluded = ["table", "shouldAllowPickingNone", "placeholder", "onChange"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; } /** @module @airtable/blocks/ui: TablePicker */ /** */
/**
 * Props shared between the {@link TablePicker} and {@link TablePickerSynced} components.
 */

// Shared with `TablePicker` and `TablePickerSynced`.
var sharedTablePickerPropTypes = exports.sharedTablePickerPropTypes = _objectSpread({
  shouldAllowPickingNone: _propTypes.default.bool,
  placeholder: _propTypes.default.string,
  onChange: _propTypes.default.func
}, _select.sharedSelectBasePropTypes);

/**
 * Props for the {@link TablePicker} component. Also accepts:
 * * {@link SelectStyleProps}
 *
 * @docsPath UI/components/TablePicker
 */

/**
 * Dropdown menu component for selecting tables.
 *
 * [[ Story id="modelpickers--tablepicker-example" title="Table picker example" ]]
 *
 * @docsPath UI/components/TablePicker
 * @component
 */
var TablePicker = (props, ref) => {
  var table = props.table,
    shouldAllowPickingNone = props.shouldAllowPickingNone,
    placeholder = props.placeholder,
    onChange = props.onChange,
    restOfProps = (0, _objectWithoutProperties2.default)(props, _excluded);
  var selectedTable = table && !table.isDeleted ? table : null;
  var sdk = (0, _sdk_context.useSdk)();
  (0, _use_watchable.default)(sdk.base, ['tables']);
  function _onChange(tableId) {
    if (onChange) {
      var newTable = tableId ? sdk.base.getTableByIdIfExists(tableId) : null;
      onChange(newTable);
    }
  }
  var placeholderToUse;
  if (placeholder === undefined) {
    // Let's set a good default value for the placeholder, depending
    // on the shouldAllowPickingNone flag.
    placeholderToUse = shouldAllowPickingNone ? 'None' : 'Pick a table...';
  } else {
    placeholderToUse = placeholder;
  }
  return /*#__PURE__*/React.createElement(_model_picker_select.default, (0, _extends2.default)({}, restOfProps, {
    ref: ref,
    models: sdk.base.tables,
    selectedModelId: selectedTable ? selectedTable.id : null,
    modelKeysToWatch: ['name'],
    shouldAllowPickingNone: shouldAllowPickingNone,
    placeholder: placeholderToUse,
    onChange: _onChange
  }));
};
var ForwardedRefTablePicker = /*#__PURE__*/React.forwardRef(TablePicker);
ForwardedRefTablePicker.displayName = 'TablePicker';
ForwardedRefTablePicker.propTypes = _objectSpread({
  table: _propTypes.default.instanceOf(_table.default)
}, sharedTablePickerPropTypes);
var _default = exports.default = ForwardedRefTablePicker;